#!/usr/bin/env bash
# set -exo pipefail
set -x

ssh_id_file="~/.ssh/id_app"

ssh_opts="-o StrictHostKeyChecking=no \
    -o UserKnownHostsFile=/dev/null \
    -o ConnectionAttempts=10"
ssh_cmd="ssh -p 22 ${ssh_opts}"
alias ssh="${ssh_cmd}"
alias ssh-copy-id="ssh-copy-id ${ssh_opts}"
alias scp="scp ${ssh_opts}"
alias rsync="rsync -avz --rsync-path=\"sudo rsync\" -e \"${ssh_cmd}\""
alias lxc_cmd="sudo lxc exec"


i=0
list="hap1 hap2 nginx"
# list="
# hap1
# hap2
# nginx
# "

# mapfile -t arr <<< "$string"
# for c in "hap1, hap2, nginx"; do
sudo apt-get update
sudo apt-get install -y uuid
for c in $list; do
    uid=$(uuid | cut -d'-' -f1)
    containers[${i}]="${c}-${uid}"
    i=$((i+1))
done

echo "Containers to create"
for c in "${containers[@]}"; do
  echo $c
done

    

# containers[0]=${hap1}
# containers[1]=${hap2}
# containers[2]=${nginx}
# uuid=$(uuidgen)
#  uid=RandomStringUtils.randomAlphanumeric(8);
# hap1="hap1_$(uuidgen)"
# hap2="hap2_$(uuidgen)"
# nginx="nginx_$(uuidgen)"

# 
# hap1="hap1"
# hap2="hap2"
image="ubuntu:bionic"
ssh_pass="rootit"
# CNAME2="centos"
# image="images:centos/8"
current_user=$(whoami)

sudo apt remove -y --purge lxd lxd-client;
sudo snap install lxd --stable  # --edge
sudo lxd waitready
sudo lxd init --auto

# sudo usermod --append --groups lxd "${current_user}"
# sudo chmod 666 /var/snap/lxd/common/lxd/unix.socket;  # avoids need for sudo on read


# sudo lxc launch ${IMAGE1} ${CNAME1};
# sudo lxc exec ${CNAME1} -- sh -c "lsb_release -a || cat /etc/redhat-release";
# sudo lxc launch ${IMAGE2} ${CNAME2};
# sudo lxc exec ${CNAME2} -- sh -c "lsb_release -a || cat /etc/redhat-release";
# sudo lxc exec ${CNAME2} -- sh -c "ping -c 4 ubuntu.lxd";
# sudo lxc exec ${CNAME2} -- sh -c "ping -c 4 ubuntu";
# sudo lxc exec ${CNAME2} -- sh -c "ping -c 4 ${CNAME1}";
# echo "sleep 10"
# sleep 10
# sudo lxc exec ${CNAME2} -- sh -c "ping -c 4 ubuntu.lxd";
# sudo lxc exec ${CNAME2} -- sh -c "ping -c 4 ubuntu";
# sudo lxc exec ${CNAME2} -- sh -c "ping -c 4 ${CNAME1}";
# # snap install lxd --stable
# sudo lxc list
# lxc list


for c in "${containers[@]}"; do
    sudo lxc launch ${image} ${c}
    sudo apt-get update
    sudo apt-get install -y sshpass rsync
done

sleep 10
sudo lxc list

# mapfile -t arr <<< "$string"
cmds="
"

for c in "${containers[@]}"; do
    # sudo lxc exec ${c} -- lsb_release -a || cat /etc/redhat-release
    sudo lxc exec ${c} -- lsb_release -a || cat /etc/*release
    sudo lxc exec ${c} -- sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
    sudo lxc exec ${c} -- systemctl restart ssh
    sudo lxc exec ${c} -- mkdir -p ~/.ssh 
    sudo lxc exec ${c} -- ssh-keygen -f ${ssh_id_file} -N ''
    for ssh_host in "${containers[@]}"; do
	if [ "${ssh_host}" != "${c}" ]; then
	    sudo lxc exec ${c} -- ping -c 2 ${ssh_host}
    	    # sudo lxc exec ${c} -- sshpass -p ${ssh_pass} ssh-copy-id ${ssh_opts} -i ~/.ssh/id_ed25519 root@${ssh_host}
    	    # sudo lxc exec ${c} -- sshpass -p ${ssh_pass} ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 root@${ssh_host}
            sudo lxc exec ${c} -- bash -c "sshpass -p ${ssh_pass} ssh -o StrictHostKeyChecking=no root@${ssh_host} hostname"
    	    # sudo lxc exec ${c} -- sshpass -p "${ssh_pass}" ssh-copy-id -o StrictHostKeyChecking=no -i ${ssh_id_file} root@${ssh_host}
    	    sudo lxc exec ${c} -- bash -c "sshpass -p "${ssh_pass}" ssh-copy-id -o StrictHostKeyChecking=no -i ${ssh_id_file} root@${ssh_host}"
    	    # sudo lxc exec ${c} -- "sshpass -p ${ssh_pass} ssh-copy-id ${ssh_opts} -i ~/.ssh/id_ed25519 root@${ssh_host}"
            sudo lxc exec ${c} -- ssh root@${ssh_host} hostname
        fi
    done
done
    # sudo lxc exec ${c} -- sh -c "ssh-copy-id -i ~/.ssh/id_app user@host"
