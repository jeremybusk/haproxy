sudo: required
dist: bionic
language: python

# if [ ${TRAVIS_BRANCH} == "master" ]; then

# stages:
#   - name: deploy
#     # require the branch name to be master (note for PRs this is the base branch name)
#     if: branch = master
stages:
  - name: test 
    # require the branch name to be master (note for PRs this is the base branch name)
    if: branch = dev 
  - name: deploy
    # require the branch name to be master (note for PRs this is the base branch name)
    if: branch = master

# jobs:
#   include:
#     - # require the branch name to be master (note for PRs this is the base branch name)
#       if: branch = master
#       env: FOO=master
# 
# jobs:
#   include:
#     - # require the branch name to be master (note for PRs this is the base branch name)
#       if: branch = dev 
#       env: FOO=dev

    # jobs:
    #   include:
    #     - stage: "Tests"                # naming the Tests stage
    #       name: "Unit Tests"            # names the first Tests stage job
    #     #   script: ./unit-tests
    #     # - script: ./integration-tests
    #       name: "Integration Tests"     # names the second Tests stage job
    #     - stage: deploy
    #       name: "Deploy to GCP"
    #       # script: ./deploy
    #       script: ./install.sh


jobs:
  include:
    - stage: test 
      python: 3.7
      env:
        - FOO=test
      script: ./test
      if: branch = dev 

    - stage: deploy
      python: 3.6 
      env:
        - FOO=deploy
      script: ./deploy
      if: branch = master 


# if: branch = fmaster
#   env:
#    - LINT=1
#    - IMAGE="ubuntu:bionic"
# if: branch = master
#   env:
#    - LINT=0
#    - IMAGE="ubuntu:xenial"
#    - CNAME="mycontainer"
#      #  - IMAGE="images:centos/8/cloud"
#      #
script:
 - if [ ! -z ${LINT} ]; then echo "Hello, world!"; fi
# setup dependencies here to save time on simpler test environments
# wait for lxd socket to be ready after snap installation
# change permissions on lxd socket to allow travis user access
# (^^ this is a throw-away CI environment, do not do this at home)
 - if [ ! -z ${IMAGE} ]; then
      sudo apt remove -y --purge lxd lxd-client;
      sudo snap install lxd --stable;
      sudo lxd waitready;
      sudo lxd init --auto;
      sudo chmod 666 /var/snap/lxd/common/lxd/unix.socket;
      sudo lxc list
   fi
 - if [ ! -z ${IMAGE} ]; then
      lxc launch ${IMAGE} ${CNAME};
      lxc exec ${CNAME} -- sh -c "lsb_release -a || cat /etc/redhat-release";
   fi
